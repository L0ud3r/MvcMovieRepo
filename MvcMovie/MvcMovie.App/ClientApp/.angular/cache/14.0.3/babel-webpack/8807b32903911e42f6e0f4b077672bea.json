{"ast":null,"code":"import { faCoffee } from '@fortawesome/free-solid-svg-icons';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction MovieComponent_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const genre_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(genre_r2);\n  }\n}\n\nfunction MovieComponent_tr_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 31);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵelement(4, \"img\", 32)(5, \"ngb-highlight\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵelement(7, \"ngb-highlight\", 33);\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵelement(10, \"ngb-highlight\", 33);\n    i0.ɵɵpipe(11, \"number\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const country_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(country_r3.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", \"https://upload.wikimedia.org/wikipedia/commons/\" + country_r3.flag, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"result\", country_r3.name)(\"term\", ctx_r1.service.searchTerm);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"result\", i0.ɵɵpipeBind1(8, 8, country_r3.area))(\"term\", ctx_r1.service.searchTerm);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"result\", i0.ɵɵpipeBind1(11, 10, country_r3.population))(\"term\", ctx_r1.service.searchTerm);\n  }\n}\n\nexport class MovieComponent {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n    this.faCoffee = faCoffee;\n    this.genres = [];\n    this.movies = [];\n    this.model = {\n      offset: 0,\n      limit: 0,\n      search: [{\n        name: \"\",\n        value: \"\"\n      }]\n    };\n  }\n\n  ngOnInit() {\n    this.paginate();\n    this.getAllGenres();\n  }\n\n  getAllGenres() {\n    this.service.usedGenres().subscribe(data => {\n      this.genres = data.map(genre => genre.text);\n    }, error => {\n      alert('Error on obtaining movie genres...');\n    });\n  }\n\n  paginate() {\n    this.service.paginateMovies(this.model).subscribe(data => {\n      this.movies = data.rows;\n    }, error => {\n      alert('Error on obtaining movies...');\n    });\n  }\n\n}\n\nMovieComponent.ɵfac = function MovieComponent_Factory(t) {\n  return new (t || MovieComponent)(i0.ɵɵdirectiveInject(i1.SharedService), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nMovieComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MovieComponent,\n  selectors: [[\"app-movie\"]],\n  decls: 49,\n  vars: 4,\n  consts: [[\"id\", \"search-form\", \"asp-controller\", \"Movies\", \"asp-action\", \"Index\", \"method\", \"get\"], [1, \"d-flex\", \"flex-row\", \"mt-4\", \"mb-2\", \"align-items-center\"], [1, \"col-0\"], [\"id\", \"genre-filter\", \"multiples\", \"multiples\", 1, \"select2-genre\", 2, \"width\", \"200px\"], [\"value\", \"\"], [4, \"ngFor\", \"ngForOf\"], [1, \"input-group\", \"col-3\"], [\"type\", \"text\", \"id\", \"title-filter\", \"asp-for\", \"SearchString\", \"placeholder\", \"Movie...\", 1, \"form-control\", \"border-0\", \"small\"], [\"type\", \"submit\", \"id\", \"search-button\", \"value\", \"Filter\", \"onclick\", \"submitSearch(event)\", 1, \"btn\", \"btn-primary\"], [\"asp-action\", \"Create\", 1, \"btn\", \"btn-primary\", \"btn-icon-split\", \"mb-3\"], [1, \"icon\", \"text-white-50\"], [1, \"fa\", \"fa-plus\"], [\"routerLink\", \"/movies/create\", 1, \"text\"], [1, \"table\", \"table-striped\"], [\"scope\", \"col\"], [\"scope\", \"col\", \"sortable\", \"name\", 3, \"sort\"], [\"scope\", \"col\", \"sortable\", \"area\", 3, \"sort\"], [\"scope\", \"col\", \"sortable\", \"population\", 3, \"sort\"], [\"id\", \"deleteConfirmModal\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"role\", \"document\", 1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"id\", \"deleteMovie\", \"method\", \"post\"], [\"type\", \"hidden\", \"id\", \"delete-movie-id\", \"name\", \"id\", \"value\", \"\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"scope\", \"row\"], [1, \"me-2\", 2, \"width\", \"20px\", 3, \"src\"], [3, \"result\", \"term\"]],\n  template: function MovieComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Movies\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0)(3, \"div\", 1)(4, \"div\", 2)(5, \"select\", 3)(6, \"option\", 4);\n      i0.ɵɵtext(7, \"All Genres\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, MovieComponent_option_8_Template, 2, 1, \"option\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 6);\n      i0.ɵɵelement(10, \"input\", 7)(11, \"input\", 8);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"a\", 9)(13, \"span\", 10);\n      i0.ɵɵelement(14, \"i\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"span\", 12);\n      i0.ɵɵtext(16, \"Add Movie\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"table\", 13)(18, \"thead\")(19, \"tr\")(20, \"th\", 14);\n      i0.ɵɵtext(21, \"#\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"th\", 15);\n      i0.ɵɵlistener(\"sort\", function MovieComponent_Template_th_sort_22_listener($event) {\n        return ctx.onSort($event);\n      });\n      i0.ɵɵtext(23, \"Country\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"th\", 16);\n      i0.ɵɵlistener(\"sort\", function MovieComponent_Template_th_sort_24_listener($event) {\n        return ctx.onSort($event);\n      });\n      i0.ɵɵtext(25, \"Area\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"th\", 17);\n      i0.ɵɵlistener(\"sort\", function MovieComponent_Template_th_sort_26_listener($event) {\n        return ctx.onSort($event);\n      });\n      i0.ɵɵtext(27, \"Population\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(28, \"tbody\");\n      i0.ɵɵtemplate(29, MovieComponent_tr_29_Template, 12, 12, \"tr\", 5);\n      i0.ɵɵpipe(30, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"div\", 18)(32, \"div\", 19)(33, \"div\", 20)(34, \"div\", 21)(35, \"h5\", 22);\n      i0.ɵɵtext(36, \"Are you sure you want to remove this movie?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"button\", 23)(38, \"span\", 24);\n      i0.ɵɵtext(39, \"\\u00D7\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(40, \"div\", 25);\n      i0.ɵɵtext(41, \"Select \\\"Yes\\\" below if you want to remove this movie.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"div\", 26)(43, \"button\", 27);\n      i0.ɵɵtext(44, \"No\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"form\", 28);\n      i0.ɵɵelement(46, \"input\", 29);\n      i0.ɵɵelementStart(47, \"button\", 30);\n      i0.ɵɵtext(48, \"Yes\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.genres);\n      i0.ɵɵadvance(21);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(30, 2, ctx.countries$));\n    }\n  },\n  dependencies: [i3.NgForOf, i2.RouterLink, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.NgControlStatusGroup, i4.NgForm, i3.AsyncPipe, i3.DecimalPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtb3ZpZS5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["faCoffee","i0","ctx_r1","MovieComponent","constructor","service","router","offset","limit","search","name","value","ngOnInit","paginate","getAllGenres","usedGenres","subscribe","data","genres","map","genre","text","error","alert","paginateMovies","model","movies","rows","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Programming\\MvcMovieRepo\\MvcMovie\\MvcMovie.App\\ClientApp\\src\\app\\movie\\movie.component.ts","C:\\Programming\\MvcMovieRepo\\MvcMovie\\MvcMovie.App\\ClientApp\\src\\app\\movie\\movie.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\nimport { SharedService } from 'src/app/shared.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})\n\nexport class MovieComponent implements OnInit {\n\n  faCoffee = faCoffee\n  genres: string[] = [];\n  movies: any[] = []\n\n  model = {\n    offset: 0,\n    limit: 0,\n    search: [\n      {\n        name: \"\",\n        value: \"\"\n      }\n    ]\n  }\n\n  constructor(private service: SharedService, private router : Router) { }\n\n  ngOnInit(): void {\n    this.paginate()\n    this.getAllGenres()\n  }\n\n  getAllGenres(): void {\n    this.service.usedGenres().subscribe(\n      (data: { disabled: boolean, group: any, selected: boolean, text: string, value: any }[]) => {\n        this.genres = data.map(genre => genre.text);\n      },\n      error => {\n        alert('Error on obtaining movie genres...');\n      }\n    );\n  }\n\n  paginate():void{\n    this.service.paginateMovies(this.model).subscribe(\n      (data : any) => {\n        this.movies = data.rows;\n      },\n      error => {\n        alert('Error on obtaining movies...');\n      }\n    );\n  }\n}\n","<h1>Movies</h1>\n\n<form id=\"search-form\" asp-controller=\"Movies\" asp-action=\"Index\" method=\"get\">\n    <div class=\"d-flex flex-row mt-4 mb-2 align-items-center\">\n        <div class=\"col-0\">\n            <select id=\"genre-filter\" multiples=\"multiples\" class=\"select2-genre\" style=\"width:200px\">\n                <option value=\"\">All Genres</option>\n                <option *ngFor=\"let genre of genres\">{{genre}}</option>\n            </select>\n        </div>\n        <div class=\"input-group col-3\">\n            <input type=\"text\" id=\"title-filter\" asp-for=\"SearchString\" class=\"form-control border-0 small\" placeholder=\"Movie...\" />\n            <input type=\"submit\" id=\"search-button\" value=\"Filter\" onclick=\"submitSearch(event)\" class=\"btn btn-primary\" />\n        </div>\n    </div>\n</form>\n\n<a asp-action=\"Create\" class=\"btn btn-primary btn-icon-split mb-3\">\n    <span class=\"icon text-white-50\">\n        <i class=\"fa fa-plus\"></i>\n    </span>\n    <span routerLink=\"/movies/create\" class=\"text\">Add Movie</span>\n</a>\n\n<!--<table>\n    <thead>\n        <tr>\n            <th data-field=\"title\">Title</th>\n            <th data-field=\"releaseDate\" data-formatter=\"dateFormat\">Release Date</th>\n            <th data-field=\"genreName\">Genre</th>\n            <th data-field=\"\" data-formatter=\"operateFormatter\">Actions</th>\n        </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let movie of movies\">\n        <td>{{movie.title}}</td>\n        <td>{{movie.releaseDate}}</td>\n        <td>{{movie.genreName}}</td>\n        <td>ICONS</td>\n      </tr>\n    </tbody>\n</table>-->\n\n<table class=\"table table-striped\">\n  <thead>\n    <tr>\n      <th scope=\"col\">#</th>\n      <th scope=\"col\" sortable=\"name\" (sort)=\"onSort($event)\">Country</th>\n      <th scope=\"col\" sortable=\"area\" (sort)=\"onSort($event)\">Area</th>\n      <th scope=\"col\" sortable=\"population\" (sort)=\"onSort($event)\">Population</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let country of countries$ | async\">\n      <th scope=\"row\">{{ country.id }}</th>\n      <td>\n        <img\n          [src]=\"'https://upload.wikimedia.org/wikipedia/commons/' + country.flag\"\n          class=\"me-2\"\n          style=\"width: 20px\"\n        />\n        <ngb-highlight [result]=\"country.name\" [term]=\"service.searchTerm\"></ngb-highlight>\n      </td>\n      <td><ngb-highlight [result]=\"country.area | number\" [term]=\"service.searchTerm\"></ngb-highlight></td>\n      <td><ngb-highlight [result]=\"country.population | number\" [term]=\"service.searchTerm\"></ngb-highlight></td>\n    </tr>\n  </tbody>\n</table>\n\n\n<div class=\"modal fade\" id=\"deleteConfirmModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\n     aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Are you sure you want to remove this movie?</h5>\n                <button class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">×</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">Select \"Yes\" below if you want to remove this movie.</div>\n            <div class=\"modal-footer\">\n                <button class=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">No</button>\n                <form id=\"deleteMovie\" method=\"post\">\n                    <input type=\"hidden\" id=\"delete-movie-id\" name=\"id\" value=\"\" />\n                    <button type=\"submit\" class=\"btn btn-primary\">Yes</button>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n\n<script>\n  $(function() {\n      var select = $('#genre-filter');\n\n      $.ajax({\n          url: 'https://localhost:7022/Genre/UsedGenres',\n          type: 'GET',\n          success: function(response) {\n              console.log(response);\n              $.each(response, function(index, item) {\n                  select.append('<option>' + item.text + '</option>');\n              });\n          }\n      });\n\n      function deleteMovieForm(e) {\n          var id = $('#delete-movie-id').val();\n\n          $.ajax({\n              url: `https://localhost:7022/Movies/Delete?id=${id}`,\n              type: 'POST',\n              contentType: 'application/json-patch+json',\n              success: function (response) {\n                  alert(\"Movie deleted successfully!\")\n                  //$('#table').bootstrapTable('refresh')\n                  location.reload();\n              },\n              error: function (jqXHR, textStatus, errorThrown) {\n                  alert(\"Something went wrong...\")\n              }\n          });\n      }\n\n      $('#deleteMovie').on('submit', function (event) {\n          event.preventDefault();\n          deleteMovieForm(event);\n      });\n  });\n\n  var $table = $('#table')\n  var $remove = $('#remove')\n  var selections = []\n\n  function submitSearch(event){\n      event.preventDefault()\n      $('#table').bootstrapTable('refresh')\n  }\n\n  function getIdSelections() {\n      return $.map($table.bootstrapTable('getSelections'), function (row) {\n          return row.id\n      })\n  }\n\n  function responseHandler(res) {\n      $.each(res.rows, function (i, row) {\n          row.state = $.inArray(row.id, selections) !== -1\n      })\n      return res\n  }\n\n  function detailFormatter(index, row) {\n      var html = []\n      $.each(row, function (key, value) {\n          html.push('<p><b>' + key + ':</b> ' + value + '</p>')\n      })\n      return html.join('')\n  }\n\n  function favAlert() {\n      alert(\"Added to favourites!\");\n  }\n\n  function detailsTab(index, row) {\n      var html = [];\n      html.push('<p><b>Title:</b> ' + row.title + '</p>');\n      html.push('<p><b>Id:</b> ' + row.id + '</p>');\n      return html.join('');\n  }\n\n  function operateFormatter(value, row, index) {\n      var inFavorites = row.inFavorites === true; // assuming the `inFavorites` property is returned by the server\n      var icon = inFavorites ? 'fa-heart' : 'fa-heart-broken';\n      var title = inFavorites ? 'Remove from favorites' : 'Add to favorites';\n\n      $.ajax({\n          url: '/Favourites/IsFavourite',\n          data: { movieId: row.id },\n          type: 'GET',\n          success: function(result) {\n              if (result) {\n                  likeIcon = 'fa fa-heart';\n                  likeTitle = 'Add to favorites';\n              }\n          }\n      });\n\n\n\n\n      return [\n          '<div style=\"display: flex; gap: 10px\">',\n          `<a class=\"remove\" href=\"#\" title=\"Remove\" onclick=\"deleteMovie(${row.id})\" data-toggle=\"modal\" data-target=\"#deleteConfirmModal\">`,\n          '<i class=\"fa fa-trash\"></i>',\n          '</a>  ',\n          `<a class=\"edit\" href=\"/Movies/Edit/${row.id}\" title=\"Edit\">`,\n          '<i class=\"fa fa-pen\"></i>',\n          '</a>  ',\n          `<a class=\"details\" href=\"/Movies/Details/${row.id}\" title=\"Details\">`,\n          '<i class=\"fa fa-eye\"></i>',\n          '</a>',\n          `<a class=\"like\" href=\"@Url.Action(\"Index\",\"Favourites\")\" title=\"Like\" data-id=\"${row.id}\">`,\n          '<i class=\"fa fa-heart\"></i>',\n          '</a>  ',\n          '</div>'\n      ].join('');\n  }\n\n  $(document).on('click', '.like', function() {\n      var movieId = $(this).data('id');\n      var token = localStorage.getItem('token');\n\n      $.ajax({\n          url: `https://localhost:7022/Favourites/Update?movieId=${movieId}&token=${token}`,\n          method: 'POST',\n          success: function () {\n              alert('Movie added/removed to favourites!');\n          },\n          error: function () {\n              alert('An error occurred');\n          }\n      });\n  });\n\n  function deleteMovie(id) {\n      $('#delete-movie-id').val(id);\n  }\n\n  function totalTextFormatter(data) {\n      return 'Total'\n  }\n\n  function totalNameFormatter(data) {\n      return data.length\n  }\n\n  function totalPriceFormatter(data) {\n      var field = this.field\n      return '$' + data.map(function (row) {\n          return +row[field].substring(1)\n      }).reduce(function (sum, i) {\n          return sum + i\n      }, 0)\n  }\n\n  $(document).ready(function () {\n      $('.select2-genre').select2();\n      $('.select2-movie').select2();\n  });\n\n  function queryParams(params) {\n      const genreFilter = $('#genre-filter').val();\n      const titleFilter = $('#title-filter').val();\n      var search = [];\n      search.push({\n          name: \"Genre\",\n          value: genreFilter\n      });\n      search.push({\n          name: \"Title\",\n          value: titleFilter\n      });\n      params.search = search;\n      return JSON.stringify(params);\n  }\n\n  //$(document).ready(function() {\n  //    // Bind a handler to the search form submission\n  //    $('#search-form').submit(function(event) {\n  //        // Prevent the default form submission behavior\n  //        event.preventDefault();\n  //        // Get the values from the form\n  //        var genre = $('#genre-filter').val();\n  //        var title = $('#title-filter').val();\n  //        // Send the search request to the server\n  //        $.ajax({\n  //            url: 'https://localhost:7022/Movies/Paginate',\n  //            type: 'POST',\n  //            data: JSON.stringify({\n  //                offset: 0,\n  //                limit: 0,\n  //                search: [\n  //                    {\n  //                        name: 'Genre',\n  //                        value: genre\n  //                    },\n  //                    {\n  //                        name: 'Title',\n  //                        value: title\n  //                    }\n  //                ]\n  //            }),\n  //            success: function(result) {\n  //                // Update the table with the search results\n  //            },\n  //            error: function(xhr, status, error) {\n  //                console.log('An error occurred while performing the search: ' + error);\n  //            }\n  //        });\n  //    });\n  //});\n\n  function dateFormat(value, row, index) {\n      if (value) {\n          var date = new Date(value);\n          var day = date.getDate();\n          var month = date.getMonth() + 1;\n          var year = date.getFullYear();\n\n          // Adiciona um zero à esquerda para dias e meses menores que 10\n          day = day < 10 ? '0' + day : day;\n          month = month < 10 ? '0' + month : month;\n\n          // Formata a data no formato desejado\n          return day + '-' + month + '-' + year;\n      } else {\n          return '-';\n      }\n  }\n</script>\n"]},"metadata":{},"sourceType":"module"}