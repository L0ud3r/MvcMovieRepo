@model MvcMovie.Models.MovieGenreViewModel

@{
    Layout = "/Views/Shared/App/_Layout.cshtml";
    ViewData["Title"] = "Index";
}

<h1>Movies</h1>

<form id="search-form" asp-controller="Movies" asp-action="Index" method="get">
    <div class="d-flex flex-row mt-4 mb-2 align-items-center">
        <div class="col-0">
            <select id="genre-filter" multiples="multiples" asp-for="MovieGenre" asp-items="Model.Genres" class="select2-genre" style="width:200px">
                <option value="">All Genres</option>
            </select>
        </div>
       <div class="input-group col-3">
            <input type="text" id="title-filter" asp-for="SearchString" class="form-control border-0 small" placeholder="Movie..." />
            <input type="submit" id="search-button" value="Filter" class="btn btn-primary" />
        </div>
         <!--<div class="col-1 d-flex gap-1 align-items-center" style="width: 500px">
            <div>
                <select id="title-filter" multiples="multiples" asp-for="SearchString"
                asp-items="@(
                    from item in Model.Movies
                    select new SelectListItem {
                        Text = item.Title,
                        Value = item.Title.ToString()
                    }
                )" class="select2-movie" style="width:200px">

                    <option value="">All Movies</option>
                </select>
            </div>
            <div class="col-2 text-right">
                <input type="submit" id="search-button" value="Filter" class="btn btn-primary" />
            </div>
        </div>-->
    </div>
</form>

<a asp-action="Create" class="btn btn-primary btn-icon-split mb-3">
    <span class="icon text-white-50">
        <i class="fa fa-plus"></i>
    </span>
    <span class="text">Add Movie</span>
</a>

<table id="table"
       data-toggle="table"
       data-query-params="queryParams"
       data-pagination="true"
       data-id-field="id"
       data-page-list="[10, 25, 50, 100, all]"
       data-side-pagination="server"
       data-url="/Movies/paginate"
       data-method="POST"
       data-search="false"
       data-locale="en-US">
    <thead>
        <tr>
            @*<th data-field="id">ID</th>*@
            <th data-field="title">Title</th>
            <th data-field="releaseDate" data-formatter="dateFormat">Release Date</th>
            <th data-field="genreName">Genre</th>
            <th data-field="" data-formatter="operateFormatter">Actions</th>
        </tr>
    </thead>
</table>

<style>
    .select,
    #locale {
        width: 100%;
    }

    .like {
        margin-right: 10px;
    }
</style>

@section scripts {
    <script>
        var $table = $('#table')
        var $remove = $('#remove')
        var selections = []

        function getIdSelections() {
            return $.map($table.bootstrapTable('getSelections'), function (row) {
                return row.id
            })
        }

        function responseHandler(res) {
            $.each(res.rows, function (i, row) {
                row.state = $.inArray(row.id, selections) !== -1
            })
            return res
        }

        function detailFormatter(index, row) {
            var html = []
            $.each(row, function (key, value) {
                html.push('<p><b>' + key + ':</b> ' + value + '</p>')
            })
            return html.join('')
        }

        function favAlert() {
            alert("Added to favourites!");
        }

        function operateFormatter(value, row, index) {
            return [
                '<div style="display: flex; gap: 10px">',
                `<a class="remove" href="/Movies/Delete/${row.id}" title="Remove">`,
                '<i class="fa fa-trash"></i>',
                '</a>  ',
                `<a class="edit" href="/Movies/Edit/${row.id}" title="Edit">`,
                '<i class="fa fa-pen"></i>',
                '</a>  ',
                `<a class="details" href="/Movies/Details/${row.id}" title="Details">`,
                '<i class="fa fa-eye"></i>',
                '</a>',
                `<a class="like" href="javascript:void(0)" title="Like" onclick="alert(\'${row.title} added to favourites!\')">`,
                '<i class="fa fa-heart"></i>',
                '</a>  ',
                '</div>'
            ].join('');
        }

        function totalTextFormatter(data) {
            return 'Total'
        }

        function totalNameFormatter(data) {
            return data.length
        }

        function totalPriceFormatter(data) {
            var field = this.field
            return '$' + data.map(function (row) {
                return +row[field].substring(1)
            }).reduce(function (sum, i) {
                return sum + i
            }, 0)
        }

        $(document).ready(function () {
            $('.select2-genre').select2();
            $('.select2-movie').select2();
        });

        function queryParams(params) {
            const genreFilter = $('#genre-filter').val();
            const titleFilter = $('#title-filter').val();
            var search = [];
            search.push({
                name: "Genre",
                value: genreFilter
            });
            search.push({
                name: "Title",
                value: titleFilter
            });
            params.search = search;
            return JSON.stringify(params);
        }

        function dateFormat(value, row, index) {
            if (value) {
                var date = new Date(value);
                var day = date.getDate();
                var month = date.getMonth() + 1;
                var year = date.getFullYear();

                // Adiciona um zero à esquerda para dias e meses menores que 10
                day = day < 10 ? '0' + day : day;
                month = month < 10 ? '0' + month : month;

                // Formata a data no formato desejado
                return day + '-' + month + '-' + year;
            } else {
                return '-';
            }
        }

    </script>
}
