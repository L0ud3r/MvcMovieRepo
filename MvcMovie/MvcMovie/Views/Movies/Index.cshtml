@model MvcMovie.Models.MovieGenreViewModel

@{
    Layout = "/Views/Shared/App/_Layout.cshtml";
    ViewData["Title"] = "Index";
}

<h1>Movies</h1>



<form asp-controller="Movies" asp-action="Index" method="get">
    <div class="row mt-4 mb-3 align-items-center">
        <div class="col-2 text-left">
            <div style="display: flex; gap: 10px;">
                <div style="align-self: center">
                    Genre:
                </div>
                <select class="form-select" style="width: 200px" asp-for="MovieGenre" asp-items="Model.Genres">
                    <option value="">All</option>
                </select>
            </div>
        </div>
        <div class="col-3" style="display: flex; gap: 10px; width: 200px;">
            <div style="align-self: center">
                Title:
            </div>
            <div>
                <input type="text" style="border: 1px solid  gray;" class="form-control bg-gray small" asp-for="SearchString" />
            </div>
        </div>
        <div class="col-4">

        </div>
        <div class="col-3">
            <div style="display:flex; gap: 5px; justify-content: right">
                <div>
                    <input type="submit" class="form-control" value="Filter" />

                </div>
                <div>
                    <a asp-action="Create" class="btn btn-primary btn-icon-split">
                        <span class="icon text-white-50">
                            <i class="fa fa-plus"></i>
                        </span>
                        <span class="text">Add Movie</span>
                    </a>
                </div>
                
            </div>
        </div>
    </div>
</form>

<table id="table"
       data-toggle="table"
       @*data-url="json/data1.json"*@
       data-pagination="true"
       data-id-field="id"
       data-page-list="[10, 25, 50, 100, all]"
       data-side-pagination="server"
       data-url="/Movies/paginate">
    <thead>
        <tr>
            <th data-field="id">ID</th>
            <th data-field="title">Title</th>
            <th data-field="releaseDate">Release Date</th>
            <th data-field="genreName">Genre</th>
            <th data-field="" data-formatter="operateFormatter">Actions</th>
        </tr>
    </thead>
</table>

<style>
    .select,
    #locale {
        width: 100%;
    }

    .like {
        margin-right: 10px;
    }
</style>

<script>
    var $table = $('#table')
    var $remove = $('#remove')
    var selections = []

    function getIdSelections() {
        return $.map($table.bootstrapTable('getSelections'), function (row) {
            return row.id
        })
    }

    function responseHandler(res) {
        $.each(res.rows, function (i, row) {
            row.state = $.inArray(row.id, selections) !== -1
        })
        return res
    }

    function detailFormatter(index, row) {
        var html = []
        $.each(row, function (key, value) {
            html.push('<p><b>' + key + ':</b> ' + value + '</p>')
        })
        return html.join('')
    }

    function favAlert() {
        alert("Added to favourites!");
    }

    function operateFormatter(value, row, index) {
        return [
            '<div style="display: flex; gap: 10px">',
            `<a class="remove" href="/Movies/Delete/${row.id}" title="Remove">`,
            '<i class="fa fa-trash"></i>',
            '</a>  ',
            `<a class="edit" href="/Movies/Edit/${row.id}" title="Edit">`,
            '<i class="fa fa-pen"></i>',
            '</a>  ',
            `<a class="details" href="/Movies/Details/${row.id}" title="Details">`,
            '<i class="fa fa-eye"></i>',
            '</a>',
            `<a class="like" href="javascript:void(0)" title="Like" onclick="alert(\'${row.title} added to favourites!\')">`,
            '<i class="fa fa-heart"></i>',
            '</a>  ',
            '</div>'
        ].join('');
    }

    function totalTextFormatter(data) {
        return 'Total'
    }

    function totalNameFormatter(data) {
        return data.length
    }

    function totalPriceFormatter(data) {
        var field = this.field
        return '$' + data.map(function (row) {
            return +row[field].substring(1)
        }).reduce(function (sum, i) {
            return sum + i
        }, 0)
    }

    function initTable() {
        $table.bootstrapTable('destroy').bootstrapTable({
            height: 550,
            locale: $('#locale').val(),
            columns: [
                [{
                    field: 'state',
                    checkbox: true,
                    rowspan: 2,
                    align: 'center',
                    valign: 'middle'
                }, {
                    title: 'Item ID',
                    field: 'id',
                    rowspan: 2,
                    align: 'center',
                    valign: 'middle',
                    sortable: true,
                    footerFormatter: totalTextFormatter
                }, {
                    title: 'Item Detail',
                    colspan: 3,
                    align: 'center'
                }],
                [{
                    field: 'name',
                    title: 'Item Name',
                    sortable: true,
                    footerFormatter: totalNameFormatter,
                    align: 'center'
                }, {
                    field: 'price',
                    title: 'Item Price',
                    sortable: true,
                    align: 'center',
                    footerFormatter: totalPriceFormatter
                }, {
                    field: 'operate',
                    title: 'Item Operate',
                    align: 'center',
                    clickToSelect: false,
                    events: window.operateEvents,
                    formatter: operateFormatter
                }]
            ]
        })
        $table.on('check.bs.table uncheck.bs.table ' +
            'check-all.bs.table uncheck-all.bs.table',
            function () {
                $remove.prop('disabled', !$table.bootstrapTable('getSelections').length)

                // save your data, here just save the current page
                selections = getIdSelections()
                // push or splice the selections if you want to save all data selections
            })
        $table.on('all.bs.table', function (e, name, args) {
            console.log(name, args)
        })
        $remove.click(function () {
            var ids = getIdSelections()
            $table.bootstrapTable('remove', {
                field: 'id',
                values: ids
            })
            $remove.prop('disabled', true)
        })
    }

    $(function () {
        initTable()

        $('#locale').change(initTable)
    })
</script>


<script src="https://unpkg.com/tableexport.jquery.plugin/tableExport.min.js"></script>
<script src="https://unpkg.com/bootstrap-table@1.21.2/dist/bootstrap-table.min.js"></script>
<script src="https://unpkg.com/bootstrap-table@1.21.2/dist/bootstrap-table-locale-all.min.js"></script>
<script src="https://unpkg.com/bootstrap-table@1.21.2/dist/extensions/export/bootstrap-table-export.min.js"></script>


<!-- Bootstrap core JavaScript-->
<script src="~/Template/vendor/jquery/jquery.min.js"></script>
<script src="~/Template/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

<!-- Core plugin JavaScript-->
<script src="~/Template/vendor/jquery-easing/jquery.easing.min.js"></script>

<!-- Custom scripts for all pages-->
<script src="~/Template/js/sb-admin-2.min.js"></script>

<!-- Page level plugins -->
<script src="~/Template/vendor/chart.js/Chart.min.js"></script>

<!-- Page level custom scripts -->
<script src="~/Template/js/demo/chart-area-demo.js"></script>
<script src="~/Template/js/demo/chart-pie-demo.js"></script>
