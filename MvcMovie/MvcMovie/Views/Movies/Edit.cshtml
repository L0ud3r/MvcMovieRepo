@model MvcMovie.Models.MovieAllGenresViewModel

@{
    Layout = "/Views/Shared/App/_Layout.cshtml";
    ViewData["Title"] = "Edit";
}

<h1>Edit movie</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form id="edit-movie-form">
            <input type="hidden" id="id" value="@Html.DisplayFor(model => model.Id)" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" id="title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ReleaseDate" class="control-label"></label>
                <input asp-for="ReleaseDate" id="date" class="form-control" />
                <span asp-validation-for="ReleaseDate" class="text-danger"></span>
            </div>
            <div>
                <label asp-for="Genre" class="control-label"></label>
                <div class="mb-3">
                    <select asp-for="Genre" class="select2-genre-movie" multiples="multiples" id="genre" style="width: 100%;" data-val="true" data-val-required="The Genre field is required" data-val-regex-pattern="^[A-Z]+[a-zA-Z\s]*$" data-val-regex="The Genre field must start with a capital letter and contain only letters or spaces.">
                        <option value="">-</option>
                    </select>
                </div>
                <span asp-validation-for="Genre" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" id="price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Rating" class="control-label"></label>
                <input asp-for="Rating" id="rating" class="form-control" />
                <span asp-validation-for="Rating" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" class="btn btn-dark btn-icon-split">
        <span class="icon text-white-50">
            <i class="fas fa-arrow-left"></i>
        </span>
        <span class="text">Back to List</span>
    </a>
</div>

@section Scripts {
    <script>

        $(document).ready(function () {
            $('.select2-genre-movie').select2();
            var movieId = $('#id').val();


            function submitMovieForm(e) {
                // Get form data
                var formData = new FormData(document.getElementById("edit-movie-form"));

                // Validate form data
                var title = formData.get("Title");
                var releaseDate = formData.get("ReleaseDate");
                var genre = formData.get("Genre");
                var price = formData.get("Price");
                var rating = formData.get("Rating");

                var genreRegex = /^[A-Z]+[a-zA-Z\s]*$/;
                var ratingRegex = /^[A-Z]+[a-zA-Z0-9'\s-]*$/;

                var isValid = true;

                if (!title) {
                    $("#title").addClass("is-invalid");
                    $("#title-validation").text("Please enter a valid title.");
                    isValid = false;
                } else {
                    $("#title").removeClass("is-invalid");
                    $("#title-validation").text("");
                }

                if (!genreRegex.test(genre)) {
                    $("#genre").addClass("is-invalid");
                    $("#genre-validation").text("Please enter a valid genre.");
                    isValid = false;
                } else {
                    $("#genre").removeClass("is-invalid");
                    $("#genre-validation").text("");
                }

                if (!ratingRegex.test(rating)) {
                    $("#rating").addClass("is-invalid");
                    $("#rating-validation").text("Please enter a valid rating.");
                    isValid = false;
                } else {
                    $("#rating").removeClass("is-invalid");
                    $("#rating-validation").text("");
                }

                if (isNaN(parseFloat(price))) {
                    $("#price").addClass("is-invalid");
                    $("#price-validation").text("Please enter a valid price.");
                    isValid = false;
                } else {
                    $("#price").removeClass("is-invalid");
                    $("#price-validation").text("");
                }

                if (isValid) {
                    var data = {
                        id: movieId,
                        title: title,
                        releaseDate: releaseDate,
                        genre: genre,
                        price: price,
                        rating: rating
                    };
                    console.log(data);
                    $.ajax({
                        url: 'https://localhost:7022/Movies/Edit',
                        type: 'POST',
                        contentType: 'application/json-patch+json',
                        data: JSON.stringify(data),
                        success: function () {
                            alert("Movie Editted successfully!")
                            window.location.href = 'https://localhost:7233/Movies/Index';
                        },
                        error: function () {
                            alert("An error occurred while creating the movie.");
                        }
                    });
                }
            }

            $('#edit-movie-form').on('submit', function (event) {
                event.preventDefault();
                submitMovieForm(event);
            });

            var select = $('#genre');

            $.ajax({
                url: 'https://localhost:7022/Genre/List',
                type: 'GET',
                success: function (response) {
                    $.each(response, function (index, item) {
                        console.log(response);
                        select.append('<option>' + item.text + '</option>');
                    });
                }
            });

            $.ajax({
                url: `https://localhost:7022/Movies/Details?id=${movieId}`,
                type: 'GET',
                success: function (response) {
                    document.getElementById('title').setAttribute('value', response.title);
                    document.getElementById('date').valueAsDate = new Date(response.releaseDate);
                    var genreSelect = $('#genre');
                    genreSelect.val(response.genre).trigger('change'); // Set selected value and trigger change event
                    document.getElementById('price').setAttribute('value', response.price);
                    document.getElementById('rating').setAttribute('value', response.rating);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("Error: " + textStatus)
                }
            });
        });
    </script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
